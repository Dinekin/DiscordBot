version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: discord-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # For HTTPS
    volumes:
      - ./nginx/nginx-ssl.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot
    depends_on:
      - discord-bot
    networks:
      - bot-network

  # Certbot for SSL certificate management
  certbot:
    image: certbot/certbot:latest
    container_name: discord-bot-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./nginx/certs:/certs
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; cp -L /etc/letsencrypt/live/yourdomain.com/fullchain.pem /certs/fullchain.pem; cp -L /etc/letsencrypt/live/yourdomain.com/privkey.pem /certs/privkey.pem; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx
    networks:
      - bot-network

  # Discord Bot with Web Dashboard
  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discord-reaction-bot
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./logs:/usr/src/app/logs
    expose:
      - "3000"  # Expose to internal network, not to host
    depends_on:
      - mongodb
    networks:
      - bot-network

  # MongoDB Database
  mongodb:
    image: mongo:5
    container_name: discord-bot-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-password}
    volumes:
      - mongodb-data:/data/db
    expose:
      - "27017"  # Expose to internal network, not to host
    networks:
      - bot-network

volumes:
  mongodb-data:
    name: discord-bot-mongodb-data

networks:
  bot-network:
    name: discord-bot-network
    driver: bridge